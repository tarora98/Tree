/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    public ArrayList<Integer> postorderTraversal(TreeNode A) {
        ArrayList<Integer> result=new ArrayList<Integer>();
        TreeNode curr=A;
        Stack<TreeNode> st=new Stack<TreeNode>();
        while(curr!=null || !st.isEmpty()){
        if(curr!=null){
            st.push(curr);
            curr=curr.left;
        }
        else{
            TreeNode temp=st.peek().right;
            if(temp==null){
                temp=st.pop();
                result.add(temp.val);
                while(!st.isEmpty() && temp==st.peek().right){
                    temp=st.pop();
                    result.add(temp.val);
                }
            }
            else{
                curr=temp;
            }
        }
        }
        return result;
    }
}
